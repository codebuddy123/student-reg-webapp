pipeline {
    agent any

    environment {
        TOMCAT_URL = '13.235.79.111'
        TOMCAT_USER = 'ec2-user'
    }

    tools {
        maven 'maven-3.9.10' // Specify the Maven version
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', credentialsId: 'ce4402e7-050c-46c0-b476-9b9e33e8db44', url: 'https://github.com/codebuddy123/student-reg-webapp.git'
            }
        }

        stage('Build the Package') {
            steps {
                sh 'mvn   clean   package' // Use Maven for building the package
            }
        }

        stage('Copying ansible folder and WAR from Workspace to the Controller') {
            steps {
                sshagent(['ansiblecredentials']) {
                    sh "scp -o StrictHostKeyChecking=no   -r ansible ${TOMCAT_USER}@${TOMCAT_URL}:/home/ec2-user/"
                    sh "scp -o StrictHostKeyChecking=no target/student-reg-webapp.war   ${TOMCAT_USER}@${TOMCAT_URL}:/home/ec2-user/ansible/"
                }
            }
        }

        stage('Run Ansible Playbook on Controller') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'ansiblecredentials', usernameVariable: 'SSH_USER', keyFileVariable: 'SSH_KEY_FILE')]) {
                    sh """
                       echo "Copying PEM file to Controller..."
                       scp -o StrictHostKeyChecking=no -i $SSH_KEY_FILE $SSH_KEY_FILE $SSH_USER@${TOMCAT_URL}:/home/ec2-user/ansible/demo.pem
     
                       echo "Running Ansible Playbook on Controller..."
                       ssh -o StrictHostKeyChecking=no -i $SSH_KEY_FILE $SSH_USER@${TOMCAT_URL} '
                         chmod 400 /home/ec2-user/ansible/demo.pem &&
                         cd /home/ec2-user/ansible &&
                         ansible-playbook -i inventory tomcat_deployment.yaml
                '
            """
              }
           }
       }
    }
}